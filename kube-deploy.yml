- name: Install Kubernetes and Containerd
  hosts: kube_cluster
  become: yes
  tasks:

    - name: Install Dependencies
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present
        update_cache: yes

    - name: Install Containerd
      apt:
        name: containerd
        state: present

    - name: Configure Containerd
      shell: |
        mkdir -p /etc/containerd
        containerd config default | tee /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
        systemctl restart containerd
        systemctl enable containerd

    - name: Add Kubernetes Repository
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/trusted.gpg.d/kubernetes-apt-keyring.gpg
        echo "deb https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list
        apt update

    - name: Install Kubernetes Components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes Packages
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - kubelet
        - kubeadm
        - kubectl

    - name: Enable Kubelet
      systemd:
        name: kubelet
        enabled: yes
        state: started

- name: Initialize Kubernetes (Master Only)
  hosts: master
  become: yes
  tasks:

    - name: Initialize Kubernetes Cluster
      shell: kubeadm init --pod-network-cidr=172.10.0.0/16 --cri-socket=/run/containerd/containerd.sock
      register: kubeadm_init
      changed_when: '"To start using your cluster, you need to run the following as a regular user" in kubeadm_init.stdout'

    - name: Set up kubeconfig for the current user
      shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      when: kubeadm_init.changed

    - name: Install Calico Network Plugin
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: kubeadm_init.changed
      ignore_errors: yes


- name: Join Worker Nodes
  hosts: workers
  become: yes
  tasks:

    - name: Get Kubeadm Join Command from Master
      shell: kubeadm token create --print-join-command
      register: join_command
      delegate_to: 192.168.100.200

    - name: Copy Join Command to Worker Nodes
      copy:
        content: "{{ join_command.stdout }}"
        dest: /tmp/kubeadm_join.sh
        mode: '0700'

    - name: Execute Join Command on Workers
      shell: bash /tmp/kubeadm_join.sh
      args:
        executable: /bin/bash
